#include <iostream>
#include <math.h>
#include <algorithm>

using namespace std;

/**
珠心算是一种通过在脑中模拟算盘变化来完成快速运算的一种计算技术。珠心算训练，既能够开发智力，又能够为日常生活带来很多便利，因而在很多学校得到普及。
某学校的珠心算老师采用一种快速考察珠心算加法能力的测验方法。他随机生成一个正整数集合，集合中的数各不相同，然后要求学生回答：其中有多少个数，恰好等于集合中另外两个（不同的）数之和？
最近老师出了一些测验题，请你帮忙求出答案

输入格式:

输入共两行，第一行包含一个整数 n，表示测试题中给出的正整数个数。
第二行有 n 个正整数， 每两个正整数之间用一个空格隔开，表示测试题中给出的正整数。
输出格式:

输出共一行，包含一个整数，表示测验题答案。
限制:

对于 100%的数据， 3 ≤ n ≤ 100，测验题给出的正整数大小不超过 10,000。
样例 1 :

输入:
4
1 2 3 4
输出:
2
说明:
由 1+2=3， 1+3=4，故满足测试要求的答案为 2。 注意，加数和被加数必须是集合中的两个不同的数。

 */

int main()
{
    // 先去重再排序
    int n;
    cin >> n;
    int a[105] = {0};
    int c[10005] = {0}; // 计数数组
    int c2[10005] = {0};
    for (int i = 0; i < n; i++) {
        cin >> a[i];
        c[a[i]]++;
    }

    // 计数排序并去重
    int same_cnt = 0;
    for (int i = 0, j = 0; i < 10005; i++) {
        if (c[i] != 0) {
            a[j] = i;
            j++;
            same_cnt += c[i]-1;
        }
    }

    n = n-same_cnt;

    for (int i = 0; i < n-2; i++) {
        for (int j = i+1; j < n-1; j++) {
            for (int k = j+1; k < n; k++) {
                int A = a[i];
                int B = a[j];
                int C = a[k];
                if (A+B==C) {
                    c2[C]++;
                }
            }
        }
    }

    int cnt = 0;
    for (int i = 0; i < 10005; i++) {
        if (c2[i] != 0)
            cnt++;
    }

    cout << cnt << endl;
    return 0;
}
