#include <iostream>

using namespace std;

/**
 * 某小学最近得到了一笔赞助，打算拿出其中一部分为学习成绩优秀的前5名学生发奖学金。
 * 期末，每个学生都有3门课的成绩：语文、数学、英语。
 * 先按总分从高到低排序，如果两个同学总分相同，再按语文成绩从高到低排序，
 * 如果两个同学总分和语文成绩都相同，那么规定学号小的同学排在前面，这样，每个学生的排序是唯一确定的。
任务：先根据输入的3门课的成绩计算总分，然后按上述规则排序，最后按排名顺序输出前5名学生的学号和总分。
 注意，在前5名同学中，每个人的奖学金都不相同，因此，你必须严格按上述规则排序。例如，在某个正确答案中，如果前两行的输出数据(每行输出两个数：学号、总分)是：
7 279
5 279
这两行数据的含义是：总分最高的两个同学的学号依次是7号、5号。这两名同学的总分都是279(总分等于输入的语文、数学、英语三科成绩之和)，但学号为7的学生语文成绩更高一些。
 如果你的前两名的输出数据是：
5 279
7 279
则按输出错误处理，不能得分。

输入格式:

输入包含n+1行：
第1行为一个正整数n，表示该校参加评选的学生人数。
第2行到第n+1行，每行有3个用空格隔开的数字，每个数字都在0到100之间。第j行的3个数字依次表示学号为j-1的学生的语文、数学、英语的成绩。
每个学生的学号按照输入顺序编号为1～n(恰好是输入数据的行号减1)。
所给的数据都是正确的，不必检验。
输出格式:

输出共有5行，每行是两个用空格隔开的正整数，依次表示前5名学生的学号和总分。
提示:

50%的数据满足：各学生的总成绩各不相同
100%的数据满足：6<=n<=300
NOIP普及组2007
限制:


 */

int compare(const int* a, const int* b) {
    int total_score_a = a[0] + a[1] + a[2];
    int total_score_b = b[0] + b[1] + b[2];
    if (total_score_a > total_score_b) { // 比较总分、语文分、学号
        return 1;
    }
    if (total_score_a == total_score_b && a[0] > b[0]) {
        return 1;
    }
    if (total_score_a == total_score_b && a[0] == b[0] && a[3] < b[3]) {
        return 1;
    }
    return -1;
}

int main()
{
    int n;
    cin >> n;
    int a[300][4];
    for (int i = 0; i < n; i++) {
        cin >> a[i][0] >> a[i][1] >> a[i][2];
        a[i][3] = i+1;
    }

    int tmp[4];
    // 数据量不大，用冒泡排序一次就可以搞定
    // 比较规则就用题目规则
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - 1 - i; j++) {
            // 比较两个数， 降序排序 a[j], a[j+1], 大的排前面
            if (compare(a[j], a[j+1]) < 0) {
                // 互换
                tmp[0] = a[j][0];
                tmp[1] = a[j][1];
                tmp[2] = a[j][2];
                tmp[3] = a[j][3];
                a[j][0] = a[j+1][0];
                a[j][1] = a[j+1][1];
                a[j][2] = a[j+1][2];
                a[j][3] = a[j+1][3];
                a[j+1][0] = tmp[0];
                a[j+1][1] = tmp[1];
                a[j+1][2] = tmp[2];
                a[j+1][3] = tmp[3];
            }
        }
    }

    int count = 0;
    for (int i = 0; i < n; i++) {
        if (count == 5) {
            break;
        }
        cout << a[i][3] << " " << a[i][0]+a[i][1]+a[i][2] << endl;
        count++;
    }


    return 0;
}
