#include <iostream>

using namespace std;
int main()
{
    /**
     * 有m个人,其编号分别为1~m。
        按顺序围成一个圈，现在给定一个数n，
        从第一个人开始依次报数,报到n的人出圈,然后再从下一个人开始,继续从1开始依次报数,到n的人再圈，……
        如此循环，直到最后一个人出圈为止。编程输出所有人出圈的顺序。

        输入格式:

        一行两个正整数m和n，之间用一个空格隔开
        1≤m<100，1≤n≤32767。
        输出格式:

        输出m行,每行一个正整数,表示依次出圈的人的编号
     */



    /**
     * 思路
     * 取模问题
     * m = 8
     * n = 5
     *
     * 1 2 3 4 5 6 7 8
     *         #5
     * 1 2 3 4 6 7 8
     *   #2         #8
     * 1 3 4 6 7
     *         #7
     * 1 3 4 6
     * 1 3 4 6
     * #1
     * 3 4 6
     *   #4
     * 3 6
     * 3 6
     *   #6
     * 3
     * 3
     * 3
     * 3
     * 3
     * #3
     */
    int m, n;
    cin >> m >> n;

    int a[100] = {0}; // 0默认值， 1为在圈内， 2位排除出圈
    // 如果没有在圈内的，则break，否则永远循环
    // 初始化数组
    for (int i = 0; i < m; i++) {
        a[i] = 1;
    }
    bool stop = false;
    int cnt = 0;
    int out_cnt = 0; // 出圈的人数
    while(!stop) {
        // 遍历数组
        for (int i = 0; i < m; i++) {
            if (a[i] == 0) {
                // 遍历到结尾
                break;
            }
            if (a[i] == 2) {
                // 这个人已经出圈，忽略
                continue;
            }
            if (a[i] == 1) {
                // 人在圈内则开始报数
                cnt++;
                if (cnt % n == 0) {
                    // 如果报数值等于n的倍数，那么输出这个人的编号i+1，并且这个人出圈
                    cout << i + 1 << endl;
                    a[i] = 2;
                    out_cnt++;
                }
            }
        }
        if (out_cnt == m) {
            // 如果出圈人数等于总人数，则停止
            stop = true;
        }
    }





    return 0;
}
