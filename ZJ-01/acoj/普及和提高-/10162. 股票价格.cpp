#include <bits/stdc++.h>


using namespace std;

/**
啊哈沃德知道一只股票在今后 n天的价格。在第一天开始前，啊哈沃德有 m 元，那么在最后一天结束后，他最多能有多少钱呢？
啊哈沃德每天都可以买入或卖出股票，注意股票在交易时的最小单位为 1股。例如当有 13 元的时候，若股价为 4 元一股，则最多只能买 3股。
规定每天只能交易一次，如果当天已经买入股票，就不能卖出，反之，如果当天已经卖出，则不能再买进股票。
输入格式:
第一行：两个整数，表示 n和 m；
第二行：n个整数 ，表示每天的股票价格a。
输出格式:
单个整数：表示能获得的最大钱数。
限制:
1<=m,a<=100;
1<=n<=100000;
保证输出答案不超过10^18。
样例 1 :
输入:
3 10
1 2 3
输出:
30
第一天以1元的价格买进10股，到了最后一天以3元的价格卖出，10元变成了30元
样例 2 :
输入:
4 100
40 20 10 5
输出:
100
没有买股票
样例 3 :
输入:
6 100
1 2 10 1 5 10
输出:
10000
第一天以1元的价格买进100股，到了第三天以10元的价格卖出，100元变成了1000元。
第四天以1元的价格买进1000股，到了第三天以10元的价格卖出，1000元变成了10000元。
 */

int main()
{
    int n,a,b; // a当天价格，b明天价格
    long long m,cnt=0;
    cin >> n >> m;
    if (n==1) { cout << m;return 0;} // n=1，只有1天没有卖的机会，直接输出m
    cin >> a;
    for (int i=1;i<n;i++) {
        cin >> b;
        if (a>b) { // 以当天价格卖出所有的库存（最后一天也要卖出所有库存）
            m+=a*cnt;
            cnt=0;
        } else if (a<b) { // 以当天价格用m钱尽可能采购
            long long inc_cnt=m/a;
            m-=a*inc_cnt;
            cnt+=inc_cnt;
        } else { // 不变的话按兵不动，不进行任何交易
        }
        a=b;
    }
    // 到最后一天卖出所有库存
    m+=a*cnt;
    cout << m;
    return 0;
}
