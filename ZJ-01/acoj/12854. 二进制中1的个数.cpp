#include <iostream>

using namespace std;
int main()
{
    /**
     * 下面我们开讲原理，举个十进制整数转换为二进制整数的例子，假设十进制整数A化得的二进制数为edcba 的形式，那么用上面的方法按权展开， 得
A=a(2^0)+b(2^1)+c(2^2)+d(2^3)+e(2^4) （后面的和不正是化十进制的过程吗）
假设该数未转化为二进制,除以基数2得
A/2=a(2^0)/2+b(2^1)/2+c(2^2)/2+d(2^3)/2+e(2^4)/2
注意：a不能整除2，但其他的能整除，因为他们都包含2，而a乘的是1，他本身绝对不包含因数2，只能余下。
商得：
b(2^0)+c(2^1)+d(2^2)+e(2^3)，再除以基数2余下了b，以此类推。
当这个数不能再被2除时，先余掉的a位数在原数数位低，而后来的余数数位高，所以要把所有的余数反过来写。正好是edcba
     */
    int n, cnt = 0;
    cin >> n;
    for (int i = 0;; i++) {
        if (n == 0) {
            break;
        }
        if (n % 2 == 1) {
            cnt++;
        }
        n = n / 2;
    }
    cout << cnt << endl;


    return 0;
}
