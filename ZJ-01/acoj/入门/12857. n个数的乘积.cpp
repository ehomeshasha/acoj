#include <iostream>

using namespace std;
int main()
{
    /**
     * 基本思路： 利用循环进行连乘
     * 对乘积结果取模，得到数据
     * 计算机取模有可能为负数，如果为负数则加上模
     *
     * 输入n个正整数，求n个整数的乘积，n<=100，每个数的大小不超过10，要求输出时只输出乘积的后6位。
     * 边界问题
     * 这里有个隐含条件，就是n可能连乘之后超过int最大值2147483647
     * 因为每个数的大小不超过10，所以可以当数字超过2147483647/10的时候，即超过200000000，下一次乘以不大于10的数就已经临近int上限
     * 此时对该数求余， 缩小该数到6位数以内，然后再进行连乘
     */
    int n, res = 1;
    cin >> n;
    for (int i = 0; i < n; i++) {
        int input;
        cin >> input;
        res *= input;
        if (res >= 2147483647/10) {
            res = res % 1000000;
            if (res < 0) {
                res += 1000000;
            }
        }
    }
    res = res % 1000000;
    if (res < 0) {
        res += 1000000;
    }
    cout << res << endl;

    return 0;
}
